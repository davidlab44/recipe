// Generated by Dagger (https://dagger.dev).
package com.david.epay.ui;

import com.david.epay.domain.GetRecipesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RecipeViewModel_Factory implements Factory<RecipeViewModel> {
  private final Provider<GetRecipesUseCase> getRecipesUseCaseProvider;

  public RecipeViewModel_Factory(Provider<GetRecipesUseCase> getRecipesUseCaseProvider) {
    this.getRecipesUseCaseProvider = getRecipesUseCaseProvider;
  }

  @Override
  public RecipeViewModel get() {
    return newInstance(getRecipesUseCaseProvider.get());
  }

  public static RecipeViewModel_Factory create(
      Provider<GetRecipesUseCase> getRecipesUseCaseProvider) {
    return new RecipeViewModel_Factory(getRecipesUseCaseProvider);
  }

  public static RecipeViewModel newInstance(GetRecipesUseCase getRecipesUseCase) {
    return new RecipeViewModel(getRecipesUseCase);
  }
}
